{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Note: the ERC-165 identifier for this interface is 0x150b7a02.",
			"kind": "dev",
			"methods": {
				"onERC721Received(address,address,uint256,bytes)": {
					"details": "The ERC721 smart contract calls this function on the recipient  after a `transfer`. This function MAY throw to revert and reject the  transfer. Return of other than the magic value MUST result in the  transaction being reverted.  Note: the contract address is always the message sender.",
					"params": {
						"_data": "Additional data with no specified format",
						"_from": "The address which previously owned the token",
						"_operator": "The address which called `safeTransferFrom` function",
						"_tokenId": "The NFT identifier which is being transferred"
					},
					"returns": {
						"_0": "`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`  unless throwing"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"onERC721Received(address,address,uint256,bytes)": {
					"notice": "Handle the receipt of an NFT"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"ERC721/ERC721.sol": "ERC721TokenReceiver"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"ERC721/ERC721.sol": {
			"keccak256": "0xcca6b27eff9466e67c9348ef65dcbab5f62d6b87c37bc194ad4f3cec63266d8c",
			"license": "MIT",
			"urls": [
				"bzz-raw://9a72a0c5a640b52b355411acc67d3e15244fc977567c006062f1804af04b80f6",
				"dweb:/ipfs/QmSdvFv1aF3W7XMWyfJAWEnms6o9zU1ZFdLFmKF7Cejq1C"
			]
		},
		"ERC721/IERC165.sol": {
			"keccak256": "0xd25130af32917ec2469d7a7e79816a240124529d9da5f9850cdd7c869e378e2f",
			"urls": [
				"bzz-raw://60df2972ffa408eeee06cc736b058ad274a606ec4efeab1c6998dcc4c1910c8d",
				"dweb:/ipfs/QmXG8yGs7BNoSWxyb5mmAmUuawTcmHMm9gVB7DUY8LX1Py"
			]
		},
		"ERC721/IERC721.sol": {
			"keccak256": "0x869e6d89967ee2fda60fbe131b8cd065a021d6b0033a686be6db2930c2b7929b",
			"license": "MIT",
			"urls": [
				"bzz-raw://62316b2f3dd5c1ca02fc7a88ad885b6500b9b0d7ab22fd3ae1af504f83d3229a",
				"dweb:/ipfs/QmQuPBR8GUEPfYXXupGowWTxjNVGSk4yKtEQhjN4TRz11H"
			]
		},
		"github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
			"keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
			"license": "MIT",
			"urls": [
				"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
				"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
			]
		}
	},
	"version": 1
}